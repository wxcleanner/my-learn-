#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
using namespace std;
class person
{
public:
	person(string name, int age)
	{
		this->m_name = name;
		this->m_age = age;
	}
	bool operator==(const person& p)
	{
		if (this->m_name == p.m_name&&this->m_age==p.m_age)
		{
			return true;
		}
		else
		{
			return false;
		}
	}

	string m_name;
	int m_age;
};
void test()
{
	vector<int>v;
	for (int i = 10; i >0; i--)
	{
		v.push_back(i);
	}
	v.push_back(1);
	vector<int>::iterator it = find(v.begin(),v.end(),1);
	if (it == v.end())
	{
		cout << "you can't find this" << endl;
	}
	else
	{

		cout << "you fiond it the position of it is" << distance(v.begin(),it) << endl;
	}
}
void test1()
{
	vector<person>p;
	person p1("E", 12);
	person p2("E1", 14);
	person p3("E2", 16);
	person p4("E3", 15);

	p.push_back(p1);
	p.push_back(p2);
	p.push_back(p3);
	p.push_back(p4);
	//p.push_back(p1);
	person pp("E", 12);

	vector<person>::iterator it = find(p.begin(), p.end(), pp);
	if (it == p.end())
	{
		cout << " you can't find this" << endl;
	}
	else
	{
		cout << "you can find this the postion is "<<distance(p.begin(),it) << endl;
	}
}
int main()
{
	test();
	test1();
	return 0;
}
